<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jaxes的博客</title>
  
  <subtitle>一个游戏开发者的小站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-24T17:17:50.336Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jaxes</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++的ifstream中使用eof最后一个字符输出两次，其实不是eof的锅！</title>
    <link href="http://yoursite.com/2018/10/25/C++%E7%9A%84ifstream%E4%B8%AD%E4%BD%BF%E7%94%A8eof%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E8%BE%93%E5%87%BA%E4%B8%A4%E6%AC%A1%EF%BC%8C%E5%85%B6%E5%AE%9E%E4%B8%8D%E6%98%AFeof%E7%9A%84%E9%94%85%EF%BC%81/"/>
    <id>http://yoursite.com/2018/10/25/C++的ifstream中使用eof最后一个字符输出两次，其实不是eof的锅！/</id>
    <published>2018-10-24T17:09:44.000Z</published>
    <updated>2018-10-24T17:17:50.336Z</updated>
    
    <content type="html"><![CDATA[<p>写C++文件输入输出流时遇到的小问题</p><p>当我执行以下代码时，最后的值会打印两次：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>,b = <span class="number">1</span>,c = <span class="number">2</span>,d = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="function">ofstream <span class="title">FileOpen</span><span class="params">(<span class="string">"Test.txt"</span>)</span></span>;</span><br><span class="line">        FileOpen&lt;&lt;<span class="string">"HelloWorld!\n"</span>;</span><br><span class="line">        FileOpen&lt;&lt;a&lt;&lt;b&lt;&lt;c&lt;&lt;d;</span><br><span class="line">        FileOpen.close();</span><br><span class="line">        <span class="function">ifstream <span class="title">Filein</span><span class="params">(<span class="string">"Test.txt"</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(！Filein.eof())</span><br><span class="line">        &#123;</span><br><span class="line">                Filein.get（ch）;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;ch;</span><br><span class="line">        &#125;</span><br><span class="line">        Filein.close();</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题在于get()方法：<strong>get()方法返回当前文件“内置指针”指向的下一个字符，然后再将“内置指针”向后移动。</strong></p><p>也就是说“内置指针”是在执行完get()后才指向下一个字符。</p><h3 id="下面来分析一下波："><a href="#下面来分析一下波：" class="headerlink" title="下面来分析一下波："></a>下面来分析一下波：</h3><p>当“内置指针”指向c时，get()返回d的值给ch，然后“内置指针”向后移动指向d，打印d的值，此时eof()返回false，而循环继续进行;</p><p>再次get()，当前“内置指针”指向d，返回的是d后面的值，然而d后面是EOF，读取失败，无法赋值给ch，ch依然为d的值，再次打印了一次d的值，get()完后，“内置指针”指向了EOF，eof()返回true，则退出而循环。</p><p>结束。</p><h3 id="原理已经懂了，进行以下的改造即可输出正确："><a href="#原理已经懂了，进行以下的改造即可输出正确：" class="headerlink" title="原理已经懂了，进行以下的改造即可输出正确："></a>原理已经懂了，进行以下的改造即可输出正确：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>,b = <span class="number">1</span>,c = <span class="number">2</span>,d = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="function">ofstream <span class="title">FileOpen</span><span class="params">(“Test.txt”)</span></span>;</span><br><span class="line">        FileOpen &lt;&lt; <span class="string">"Helloworld!\n"</span>;</span><br><span class="line">        FileOpen &lt;&lt; a &lt;&lt; b &lt;&lt; c &lt;&lt; d;</span><br><span class="line">        FileOpen.close();</span><br><span class="line">        <span class="function">ifstream <span class="title">Filein</span><span class="params">(<span class="string">"Test.txt"</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(Filein.get(ch),!Filein.eof())</span><br><span class="line">        &#123;</span><br><span class="line">              <span class="built_in">cout</span> &lt;&lt; ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2018/10/25/C++的ifstream中使用eof最后一个字符输出两次，其实不是eof的锅！/result.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写C++文件输入输出流时遇到的小问题&lt;/p&gt;
&lt;p&gt;当我执行以下代码时，最后的值会打印两次：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
      <category term="C++" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="文件输入输出流" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>Unity终止协程的问题</title>
    <link href="http://yoursite.com/2018/10/23/Unity%E7%BB%88%E6%AD%A2%E5%8D%8F%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/23/Unity终止协程的问题/</id>
    <published>2018-10-23T15:17:30.000Z</published>
    <updated>2018-10-23T15:36:11.258Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做项目的时候发现，调用<code>StopCoroutine()</code>来终止一个正在运行的协程的时候，无法终止协程。然后通过查资料发现了一下两种办法：</p><h3 id="利用字符串来启动和终止协程："><a href="#利用字符串来启动和终止协程：" class="headerlink" title="利用字符串来启动和终止协程："></a>利用字符串来启动和终止协程：</h3><p>比如，我有一个协程<code>IEnumerator MoveAnimation()</code>，启动时要用<code>StartCoroutine(&quot;MoveAnimation&quot;)</code>，终止的时候用<code>StopCoroutine(&quot;MoveAnimation&quot;)</code>，才能正确终止协程。</p><p>要想传参，可以使用 <code>StartCoroutine(&quot;MoveAnimation&quot;, object)</code>来传参。</p><h3 id="不用字符串来启动和终止协程的方法："><a href="#不用字符串来启动和终止协程的方法：" class="headerlink" title="不用字符串来启动和终止协程的方法："></a>不用字符串来启动和终止协程的方法：</h3><p>定义一个<code>Coroutine</code>类型的变量<code>coroutine</code>，在<code>StartCoroutine(MoveAnimation())</code>后接收返回的值：</p><p><code>coroutine=StartCoroutine(&quot;MoveAnimation&quot;);</code></p><p>然后终止协程的时候利用<code>StopCoroutine(coroutine)</code>来终止。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在做项目的时候发现，调用&lt;code&gt;StopCoroutine()&lt;/code&gt;来终止一个正在运行的协程的时候，无法终止协程。然后通过查资料发现了一下两种办法：&lt;/p&gt;
&lt;h3 id=&quot;利用字符串来启动和终止协程：&quot;&gt;&lt;a href=&quot;#利用字符串来启动和终止协程：&quot; 
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="游戏开发" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Unity界面UGUI遮挡的问题</title>
    <link href="http://yoursite.com/2018/10/22/Unity%E7%95%8C%E9%9D%A2UGUI%E9%81%AE%E6%8C%A1%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/22/Unity界面UGUI遮挡的问题/</id>
    <published>2018-10-22T12:22:45.000Z</published>
    <updated>2018-10-22T13:39:42.152Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>在使用Unity的UGUI时候，重叠的UI控件可能会导致某一个控件点击失败，如下图：</p><p><img src="/2018/10/22/Unity界面UGUI遮挡的问题/pause.png" alt=""></p><p>在前面的图片挡住了后面的Button，导致后面的Button无法触发点击事件，此时只要把图片的Image组件的<code>Raycast Target</code>的勾选取消即可解决遮挡的问题：</p><p><img src="/2018/10/22/Unity界面UGUI遮挡的问题/image.png" alt=""></p><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p>鼠标点击屏幕实际上是以点击的点为原点，发射一条垂直屏幕向里的射线，然后通过射线与第一个物体的相交来判断是否点击到该物体。取消了<code>Raycast Target</code>选项表明不作为射线相交的对象，则不会挡住后面的Button</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;解决方法：&quot;&gt;&lt;a href=&quot;#解决方法：&quot; class=&quot;headerlink&quot; title=&quot;解决方法：&quot;&gt;&lt;/a&gt;解决方法：&lt;/h3&gt;&lt;p&gt;在使用Unity的UGUI时候，重叠的UI控件可能会导致某一个控件点击失败，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src
      
    
    </summary>
    
      <category term="Unity" scheme="http://yoursite.com/categories/Unity/"/>
    
    
      <category term="Unity" scheme="http://yoursite.com/tags/Unity/"/>
    
      <category term="游戏开发" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>steam商店页面的探索队列无法打开</title>
    <link href="http://yoursite.com/2018/10/21/steam%E5%95%86%E5%BA%97%E9%A1%B5%E9%9D%A2%E7%9A%84%E6%8E%A2%E7%B4%A2%E9%98%9F%E5%88%97%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80/"/>
    <id>http://yoursite.com/2018/10/21/steam商店页面的探索队列无法打开/</id>
    <published>2018-10-21T15:43:04.000Z</published>
    <updated>2018-10-21T16:04:55.042Z</updated>
    
    <content type="html"><![CDATA[<p>steam的探索队列可能会显示“你所在的地区不提供此物品”，此时如何解决呢？</p><h3 id="用浏览器打开steam商店页面："><a href="#用浏览器打开steam商店页面：" class="headerlink" title="用浏览器打开steam商店页面："></a>用浏览器打开steam商店页面：</h3><p><img src="/2018/10/21/steam商店页面的探索队列无法打开/home.png" alt="steam商店页面"></p><h3 id="然后按F12打开浏览器控制台（Console）："><a href="#然后按F12打开浏览器控制台（Console）：" class="headerlink" title="然后按F12打开浏览器控制台（Console）："></a>然后按F12打开浏览器控制台（Console）：</h3><p><img src="/2018/10/21/steam商店页面的探索队列无法打开/console.png" alt="控制台页面"></p><h3 id="然后在右边输入以下代码："><a href="#然后在右边输入以下代码：" class="headerlink" title="然后在右边输入以下代码："></a>然后在右边输入以下代码：</h3><p><code>$J.post(&quot;/app/7&quot;, { sessionid: g_sessionID, appid_to_clear_from_queue: APPID });</code></p><p>注意：其中的<code>APPID</code>由你当前队列的网址的以下数字串决定，把你对应的数字串替换上面代码的<code>APPID</code>即可</p><p><img src="/2018/10/21/steam商店页面的探索队列无法打开/appid.png" alt="网址中的APPID"></p>]]></content>
    
    <summary type="html">
    
      steam的探索队列可能会显示“你所在的地区不提供此物品”，此时如何解决呢？
    
    </summary>
    
      <category term="杂项" scheme="http://yoursite.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="steam" scheme="http://yoursite.com/tags/steam/"/>
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
</feed>
